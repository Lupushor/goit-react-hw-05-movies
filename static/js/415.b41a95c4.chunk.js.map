{"version":3,"file":"static/js/415.b41a95c4.chunk.js","mappings":"4LAGaA,EAAS,WACpB,OACE,+BACE,SAAC,KAAD,CACEC,MAAM,UACNC,OAAQ,GACRC,MAAO,GACPC,aAAc,CACZC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,4BAKpB,C,uGChBYC,EAAOC,EAAAA,GAAAA,GAAH,4JAWJC,GAAOD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,uGAYJG,GAJQH,EAAAA,GAAAA,GAAH,+CAIMA,EAAAA,GAAAA,EAAH,+HAQRI,EAAQJ,EAAAA,GAAAA,IAAH,iL,SC9BLK,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACT,EAAD,UACGO,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,YAApB,OACV,yBACE,UAACZ,EAAD,CAAMa,GAAE,kBAAaJ,GAAMK,MAAO,CAAEC,KAAMT,GAA1C,WACE,SAACH,EAAD,CACEa,IACEJ,EAAW,yCAC2BA,GAD3B,iEAIbK,IAAKP,KAEP,SAACR,EAAD,UAAWQ,GAASC,QAVfF,EADC,KAiBjB,C,kHCUD,UA/Ba,WACX,OAA4BS,EAAAA,EAAAA,UAAS,IAArC,eAAOb,EAAP,KAAec,EAAf,KACA,GAA4BD,EAAAA,EAAAA,UAAS,QAArC,eAAOE,EAAP,KAAeC,EAAf,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACRD,EAAU,WACV,IAAME,EAAS,mCAAG,8GAEKC,EAAAA,EAAAA,MAFL,OAERC,EAFQ,OAGdN,EAAUM,GACVJ,EAAU,aAJI,gDAMdA,EAAU,YANI,yDAAH,qDASfE,GACD,GAAE,KAGD,2BACc,YAAXH,IAAwB,SAAC,IAAD,IACb,aAAXA,IACC,eAAIM,UAAU,SAAd,SAAuB,6BAEb,cAAXN,GAA0Bf,EAAOsB,OAAS,IACzC,SAAC,IAAD,CAAWtB,OAAQA,MAI1B,C,+LChCDuB,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAO,mCAEN,SAAeL,IAAtB,4CAAO,OAAP,oBAAO,oGACkBI,EAAAA,EAAAA,IAAA,mCAAsCC,IADxD,cACCC,EADD,yBAEEA,EAASL,KAAKM,SAFhB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAmCC,GAAnC,uFACkBL,EAAAA,EAAAA,IAAA,+BACGC,EADH,4DAC8DI,IAFhF,cACCH,EADD,yBAIEA,EAASL,KAAKM,SAJhB,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,uFACkBP,EAAAA,EAAAA,IAAA,gBACZO,EADY,oBACON,EADP,4CADlB,cACCC,EADD,yBAKEA,EAASL,MALX,kEAQA,SAAeW,EAAtB,+CAAO,OAAP,oBAAO,WAAiCD,GAAjC,uFACkBP,EAAAA,EAAAA,IAAA,gBACZO,EADY,4BACeN,EADf,oBADlB,cACCC,EADD,yBAIEA,EAASL,KAAKY,MAJhB,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCH,GAAjC,uFACkBP,EAAAA,EAAAA,IAAA,gBACZO,EADY,4BACeN,EADf,2BADlB,cACCC,EADD,yBAIEA,EAASL,KAAKM,SAJhB,kE","sources":["components/loader/Loader.jsx","components/movie_list/MovieList.styled.jsx","components/movie_list/MovieList.jsx","pages/Home.jsx","servise/Api.jsx"],"sourcesContent":["import { Grid } from 'react-loader-spinner';\n// import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nexport const Loader = () => {\n  return (\n    <>\n      <Grid\n        color=\"#00BFFF\"\n        height={80}\n        width={80}\n        wrapperStyle={{\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n        }}\n      />\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const List = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 15px;\n\n  margin: 0;\n  padding: 0;\n`;\n\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n  &:hover,\n  &:focus {\n    color: orangered;\n  }\n`;\n\nexport const Title = styled.h2`\n  text-align: center;\n`;\n\nexport const FilmName = styled.p`\n  max-width: 240px;\n  padding: 4px;\n  margin-top: 8px;\n  margin-bottom: 0;\n  text-align: center;\n`;\n\nexport const Image = styled.img`\n  display: block;\n  width: 245px;\n  height: 325px;\n  transition: transform 0.3s linear;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.03);\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { List, Link, Image, FilmName } from './MovieList.styled';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {movies.map(({ id, title, name, poster_path }) => (\n        <li key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            <Image\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w300${poster_path}`\n                  : `https://sd.keepcalms.com/i-w300/keep-calm-poster-not-found.jpg`\n              }\n              alt={title}\n            />\n            <FilmName>{title || name}</FilmName>\n          </Link>\n        </li>\n      ))}\n    </List>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n};\n","import { Loader } from 'components/loader/Loader';\nimport { MovieList } from 'components/movie_list/MovieList';\nimport { useEffect, useState } from 'react';\nimport { fetchTrendingMovies } from 'servise/Api';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [status, setStatus] = useState('idle');\n\n  useEffect(() => {\n    setStatus('pending');\n    const fetchData = async () => {\n      try {\n        const data = await fetchTrendingMovies();\n        setMovies(data);\n        setStatus('responded');\n      } catch {\n        setStatus('rejected');\n      }\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      {status === 'pending' && <Loader />}\n      {status === 'rejected' && (\n        <h2 textAlign=\"center\">Something went wrong ...</h2>\n      )}\n      {status === 'responded' && movies.length > 0 && (\n        <MovieList movies={movies} />\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = `2d241d2c03071ceb6548b913b9b2401a`;\n\nexport async function fetchTrendingMovies() {\n  const response = await axios.get(`trending/all/day?api_key=${API_KEY}`);\n  return response.data.results;\n}\n\nexport async function fetchMoviesBySearch(query) {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return response.data.results;\n}\n\nexport async function fetchMovieDetails(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US&external_source=imdb_id`\n  );\n\n  return response.data;\n}\n\nexport async function fetchMovieCredits(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n}\n\nexport async function fetchMovieReviews(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n}\n"],"names":["Loader","color","height","width","wrapperStyle","position","top","left","transform","List","styled","Link","NavLink","FilmName","Image","MovieList","movies","location","useLocation","map","id","title","name","poster_path","to","state","from","src","alt","useState","setMovies","status","setStatus","useEffect","fetchData","fetchTrendingMovies","data","textAlign","length","axios","API_KEY","response","results","fetchMoviesBySearch","query","fetchMovieDetails","movieId","fetchMovieCredits","cast","fetchMovieReviews"],"sourceRoot":""}