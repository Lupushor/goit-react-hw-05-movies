{"version":3,"file":"static/js/769.97cc9733.chunk.js","mappings":"4LAGaA,EAAS,WACpB,OACE,+BACE,SAAC,KAAD,CACEC,MAAM,UACNC,OAAQ,GACRC,MAAO,GACPC,aAAc,CACZC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,4BAKpB,C,qKChBYC,EAAOC,EAAAA,GAAAA,GAAH,6CAIJC,EAAOD,EAAAA,GAAAA,EAAH,8C,SCDJE,EAAU,WACrB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAiBR,OAfAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,oGAEpBJ,EAAU,WAFU,UAGDK,EAAAA,EAAAA,IAAkBJ,GAHjB,OAGdK,EAHc,OAIpBR,EAAWQ,GACXN,EAAU,aALU,gDAOpBA,EAAU,YAPU,yDAAH,qDAWrBI,EAAgBH,EACjB,GAAE,CAACA,KAGF,gCACc,cAAXF,GAA6C,IAAnBF,EAAQU,QACjC,wBAAI,0BAEJ,SAACf,EAAD,UACGK,EAAQW,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1B,OACE,2BACE,0BAAI,WAASD,MACb,SAAChB,EAAD,UAAOiB,MAFAF,EAKZ,MAGO,YAAXV,IAAwB,SAAChB,EAAA,EAAD,IACb,aAAXgB,IAAyB,wBAAI,8BAGnC,C,+LC5CDa,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAO,mCAEN,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBF,EAAAA,EAAAA,IAAA,mCAAsCC,IADxD,cACCE,EADD,yBAEEA,EAAST,KAAKT,SAFhB,kEAKA,SAAemB,EAAtB,+CAAO,OAAP,oBAAO,WAAmCC,GAAnC,uFACkBL,EAAAA,EAAAA,IAAA,+BACGC,EADH,4DAC8DI,IAFhF,cACCF,EADD,yBAIEA,EAAST,KAAKT,SAJhB,kEAOA,SAAeqB,EAAtB,+CAAO,OAAP,oBAAO,WAAiCjB,GAAjC,uFACkBW,EAAAA,EAAAA,IAAA,gBACZX,EADY,oBACOY,EADP,4CADlB,cACCE,EADD,yBAKEA,EAAST,MALX,kEAQA,SAAea,EAAtB,+CAAO,OAAP,oBAAO,WAAiClB,GAAjC,uFACkBW,EAAAA,EAAAA,IAAA,gBACZX,EADY,4BACeY,EADf,oBADlB,cACCE,EADD,yBAIEA,EAAST,KAAKc,MAJhB,kEAOA,SAAef,EAAtB,+CAAO,OAAP,oBAAO,WAAiCJ,GAAjC,uFACkBW,EAAAA,EAAAA,IAAA,gBACZX,EADY,4BACeY,EADf,2BADlB,cACCE,EADD,yBAIEA,EAAST,KAAKT,SAJhB,kE","sources":["components/loader/Loader.jsx","components/reviews/Reviews.styled.jsx","components/reviews/Reviews.jsx","servise/Api.jsx"],"sourcesContent":["import { Grid } from 'react-loader-spinner';\n// import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nexport const Loader = () => {\n  return (\n    <>\n      <Grid\n        color=\"#00BFFF\"\n        height={80}\n        width={80}\n        wrapperStyle={{\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n        }}\n      />\n    </>\n  );\n};\n","import styled from 'styled-components';\n\n\nexport const List = styled.ul`\n  list-style: none;\n`;\n\nexport const Text = styled.p`\n  max-width: 1600px;\n`;","import { Loader } from 'components/loader/Loader';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'servise/Api';\nimport { List, Text } from './Reviews.styled';\n\nexport const Reviews = () => {\n  const [results, setResults] = useState([]);\n  const [status, setStatus] = useState('idle');\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getMovieReviews = async () => {\n      try {\n        setStatus('pending');\n        const data = await fetchMovieReviews(movieId);\n        setResults(data);\n        setStatus('responded');\n      } catch {\n        setStatus('rejected');\n      }\n    };\n\n    getMovieReviews(movieId);\n  }, [movieId]);\n\n  return (\n    <>\n      {status === 'responded' && results.length === 0 ? (\n        <h2>There are no reviews</h2>\n      ) : (\n        <List>\n          {results.map(({ id, author, content }) => {\n            return (\n              <li key={id}>\n                <h3>Author: {author}</h3>\n                <Text>{content}</Text>\n              </li>\n            );\n          })}\n        </List>\n      )}\n      {status === 'pending' && <Loader />}\n      {status === 'rejected' && <h2>Something went wrong...</h2>}\n    </>\n  );\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = `2d241d2c03071ceb6548b913b9b2401a`;\n\nexport async function fetchTrendingMovies() {\n  const response = await axios.get(`trending/all/day?api_key=${API_KEY}`);\n  return response.data.results;\n}\n\nexport async function fetchMoviesBySearch(query) {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return response.data.results;\n}\n\nexport async function fetchMovieDetails(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US&external_source=imdb_id`\n  );\n\n  return response.data;\n}\n\nexport async function fetchMovieCredits(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n}\n\nexport async function fetchMovieReviews(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n}\n"],"names":["Loader","color","height","width","wrapperStyle","position","top","left","transform","List","styled","Text","Reviews","useState","results","setResults","status","setStatus","movieId","useParams","useEffect","getMovieReviews","fetchMovieReviews","data","length","map","id","author","content","axios","API_KEY","fetchTrendingMovies","response","fetchMoviesBySearch","query","fetchMovieDetails","fetchMovieCredits","cast"],"sourceRoot":""}