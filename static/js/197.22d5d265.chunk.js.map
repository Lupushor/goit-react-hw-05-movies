{"version":3,"file":"static/js/197.22d5d265.chunk.js","mappings":"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","sources":["components/loader/Loader.jsx","components/movie_item/MovieItem.styled.jsx","components/movie_item/MovieItem.jsx","pages/MovieDetails.jsx","servise/Api.jsx"],"sourcesContent":["import { Grid } from 'react-loader-spinner';\n// import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nexport const Loader = () => {\n  return (\n    <>\n      <Grid\n        color=\"#00BFFF\"\n        height={80}\n        width={80}\n        wrapperStyle={{\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n        }}\n      />\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  gap: 15px;\n`;\n\nexport const OverviewText = styled.p`\n  width: 640px;\n`;\n","import PropTypes from 'prop-types';\nimport { Container, OverviewText } from './MovieItem.styled';\n\nexport const MovieItem = ({ movie }) => {\n  const { title, genres, original_title, overview, poster_path, vote_average } =\n    movie;\n\n  const mainPoster = `https://image.tmdb.org/t/p/w300${poster_path}`;\n  const posterFake = `https://sd.keepcalms.com/i-w300/keep-calm-poster-not-found.jpg`;\n\n  return (\n    <>\n      <Container>\n        <img src={poster_path ? mainPoster : posterFake} alt={title} />\n        <div>\n          <h2>{title || original_title}</h2>\n          <p>Use Score: {vote_average}</p>\n          <b>Overview</b>\n          <OverviewText>{overview}</OverviewText>\n          <b>Genres:</b>\n          <p>{genres.map(({ name }) => name).join(', ')}</p>\n        </div>\n      </Container>\n    </>\n  );\n};\n\nMovieItem.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    original_title: PropTypes.string.isRequired,\n    poster_path: PropTypes.string,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({ name: PropTypes.string.isRequired })\n    ),\n  }).isRequired,\n};\n","import { Loader } from 'components/loader/Loader';\nimport { MovieItem } from 'components/movie_item/MovieItem';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { fetchMovieDetails } from 'servise/Api';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [selectedMovie, setSelectedMovie] = useState({});\n  const location = useLocation();\n\n  const [status, setStatus] = useState('idle');\n  const backLinkLocationRef = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    setStatus('pending');\n    const getMovieSelect = async () => {\n      try {\n        const data = await fetchMovieDetails(movieId);\n        setSelectedMovie(data);\n        setStatus('responded');\n      } catch {\n        setStatus('rejected');\n      }\n    };\n    getMovieSelect();\n  }, [movieId]);\n\n  return (\n    <>\n      <Link to={backLinkLocationRef.current}>Back</Link>\n      {status === 'responded' && <MovieItem movie={selectedMovie} />}\n\n      <nav>\n        <Link to=\"cast\">Cast</Link>\n        <Link to=\"reviews\">Reviews</Link>\n      </nav>\n      {status === 'pending' && <Loader />}\n      {status === 'rejected' && <p>Something went wrong ...</p>}\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = `2d241d2c03071ceb6548b913b9b2401a`;\n\nexport async function fetchTrendingMovies() {\n  const response = await axios.get(`trending/all/day?api_key=${API_KEY}`);\n  return response.data.results;\n}\n\nexport async function fetchMoviesBySearch(query) {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return response.data.results;\n}\n\nexport async function fetchMovieDetails(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US&external_source=imdb_id`\n  );\n\n  return response.data;\n}\n\nexport async function fetchMovieCredits(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n}\n\nexport async function fetchMovieReviews(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n}\n"],"names":["Loader","color","height","width","wrapperStyle","position","top","left","transform","Container","styled","OverviewText","MovieItem","movie","title","genres","original_title","overview","poster_path","vote_average","mainPoster","src","alt","map","name","join","movieId","useParams","useState","selectedMovie","setSelectedMovie","location","useLocation","status","setStatus","backLinkLocationRef","useRef","state","from","useEffect","getMovieSelect","fetchMovieDetails","data","to","current","Suspense","fallback","axios","API_KEY","fetchTrendingMovies","response","results","fetchMoviesBySearch","query","fetchMovieCredits","cast","fetchMovieReviews"],"sourceRoot":""}