{"version":3,"file":"static/js/432.1e5f03b0.chunk.js","mappings":"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","sources":["components/loader/Loader.jsx","components/movie_list/MovieList.styled.jsx","components/movie_list/MovieList.jsx","components/search_form/SearchForm.styled.jsx","pages/Movies.jsx","servise/Api.jsx"],"sourcesContent":["import { Grid } from 'react-loader-spinner';\n// import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nexport const Loader = () => {\n  return (\n    <>\n      <Grid\n        color=\"#00BFFF\"\n        height={80}\n        width={80}\n        wrapperStyle={{\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n        }}\n      />\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const List = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 15px;\n\n  margin: 0;\n  padding: 0;\n`;\n\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n  &:hover,\n  &:focus {\n    color: orangered;\n  }\n`;\n\nexport const Title = styled.h2`\n  text-align: center;\n`;\n\nexport const FilmName = styled.p`\n  max-width: 240px;\n  padding: 4px;\n  margin-top: 8px;\n  margin-bottom: 0;\n  text-align: center;\n`;\n\nexport const Image = styled.img`\n  display: block;\n  width: 245px;\n  height: 325px;\n  transition: transform 0.3s linear;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.03);\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { List, Link, Image, FilmName } from './MovieList.styled';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {movies.map(({ id, title, name, poster_path }) => (\n        <li key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            <Image\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w300${poster_path}`\n                  : `https://sd.keepcalms.com/i-w300/keep-calm-poster-not-found.jpg`\n              }\n              alt={title}\n            />\n            <FilmName>{title || name}</FilmName>\n          </Link>\n        </li>\n      ))}\n    </List>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  justify-content: center;\n  padding: 5px 0;\n  margin-bottom: 20px;\n`;\n\nexport const Button = styled.button`\n  padding: 5px 25px;\n  margin-left: 7px;\n  border-radius: 4px;\n  border: 1px solid grey;\n\n  &:hover,\n  &:focus {\n    background-color: tomato;\n    color: white;\n    border: 1px solid tomato;\n  }\n\n  /* background-color: aqua; */\n`;\n\nexport const Input = styled.input`\n  min-width: 300px;\n`;\n","import { Loader } from 'components/loader/Loader';\nimport { MovieList } from 'components/movie_list/MovieList';\nimport {\n  Button,\n  Input,\n  SearchForm,\n} from 'components/search_form/SearchForm.styled';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchMoviesBySearch } from 'servise/Api';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const [status, setStatus] = useState('idle');\n\n  useEffect(() => {\n    const getMovies = async () => {\n      try {\n        setStatus('pending');\n        const movies = await fetchMoviesBySearch(query);\n        setMovies(movies);\n        setStatus('responded');\n      } catch {\n        setStatus('rejected');\n      }\n    };\n    if (query) {\n      getMovies();\n    }\n  }, [query]);\n\n  function onSubmit(e) {\n    e.preventDefault();\n    const { value } = e.target.query;\n    const query = value.trim() ? { query: value } : {};\n    setSearchParams(query);\n  }\n\n  return (\n    <div>\n      <SearchForm onSubmit={onSubmit}>\n        <Input type=\"text\" name=\"query\" placeholder=\"Search movies\" />\n        <Button type=\"submit\">Find</Button>\n      </SearchForm>\n      {status === 'responded' && <MovieList movies={movies} />}\n      {status === 'pending' && <Loader />}\n      {status === 'rejected' && <p>Something went wrong ...</p>}\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = `2d241d2c03071ceb6548b913b9b2401a`;\n\nexport async function fetchTrendingMovies() {\n  const response = await axios.get(`trending/all/day?api_key=${API_KEY}`);\n  return response.data.results;\n}\n\nexport async function fetchMoviesBySearch(query) {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return response.data.results;\n}\n\nexport async function fetchMovieDetails(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US&external_source=imdb_id`\n  );\n\n  return response.data;\n}\n\nexport async function fetchMovieCredits(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n}\n\nexport async function fetchMovieReviews(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n}\n"],"names":["Loader","color","height","width","wrapperStyle","position","top","left","transform","List","styled","Link","NavLink","FilmName","Image","MovieList","movies","location","useLocation","map","id","title","name","poster_path","to","state","from","src","alt","SearchForm","Button","Input","useState","setMovies","useSearchParams","searchParams","setSearchParams","query","get","status","setStatus","useEffect","getMovies","fetchMoviesBySearch","onSubmit","e","preventDefault","value","target","trim","type","placeholder","axios","API_KEY","fetchTrendingMovies","response","data","results","fetchMovieDetails","movieId","fetchMovieCredits","cast","fetchMovieReviews"],"sourceRoot":""}