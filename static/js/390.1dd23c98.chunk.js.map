{"version":3,"file":"static/js/390.1dd23c98.chunk.js","mappings":"kOAsDA,UAjDa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACRD,EAAU,WACV,IAAME,EAAgB,mCAAG,8GAEFC,EAAAA,EAAAA,IAAkBT,GAFhB,OAEfG,EAFe,OAGrBC,EAAQD,GACRG,EAAU,aAJW,gDAMrBA,EAAU,YANW,yDAAH,qDAStBE,GACD,GAAE,CAACR,KAGF,gCACc,YAAXK,IAAwB,SAAC,IAAD,IACb,aAAXA,IAAyB,uBAAG,6BAEjB,cAAXA,IACC,wBACGF,EAAKO,KAAI,YAAqD,IAAlDC,EAAiD,EAAjDA,GAAIC,EAA6C,EAA7CA,aAAcC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,UAC5C,OACE,2BACE,gBACEC,IACEH,EAAY,yCAC0BA,GAClC,mGAENI,IAAKH,EACLI,MAAO,OAET,yBAAG,uBAAMJ,MACT,yBAAG,qDAAWC,OAXPH,EAcZ,QAKV,C,4ECjDYO,EAAS,WACpB,OACE,+BACE,SAAC,KAAD,CACEC,MAAM,UACNC,OAAQ,GACRH,MAAO,GACPI,aAAc,CACZC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,4BAKpB,C,+LCjBDC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAO,mCAEN,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBF,EAAAA,EAAAA,IAAA,mCAAsCC,IADxD,cACCE,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAmCC,GAAnC,uFACkBP,EAAAA,EAAAA,IAAA,+BACGC,EADH,4DAC8DM,IAFhF,cACCJ,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAiClC,GAAjC,uFACkB0B,EAAAA,EAAAA,IAAA,gBACZ1B,EADY,oBACO2B,EADP,4CADlB,cACCE,EADD,yBAKEA,EAASC,MALX,kEAQA,SAAerB,EAAtB,+CAAO,OAAP,oBAAO,WAAiCT,GAAjC,uFACkB0B,EAAAA,EAAAA,IAAA,gBACZ1B,EADY,4BACe2B,EADf,oBADlB,cACCE,EADD,yBAIEA,EAASC,KAAK3B,MAJhB,kEAOA,SAAegC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCnC,GAAjC,uFACkB0B,EAAAA,EAAAA,IAAA,gBACZ1B,EADY,4BACe2B,EADf,2BADlB,cACCE,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kE","sources":["components/cast/Cast.jsx","components/loader/Loader.jsx","servise/Api.jsx"],"sourcesContent":["import { Loader } from 'components/loader/Loader';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCredits } from 'servise/Api';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n  const [status, setStatus] = useState('idle');\n\n  useEffect(() => {\n    setStatus('pending');\n    const getMoviesCredits = async () => {\n      try {\n        const cast = await fetchMovieCredits(movieId);\n        setCast(cast);\n        setStatus('responded');\n      } catch {\n        setStatus('rejected');\n      }\n    };\n    getMoviesCredits();\n  }, [movieId]);\n\n  return (\n    <>\n      {status === 'pending' && <Loader />}\n      {status === 'rejected' && <p>Something went wrong ...</p>}\n\n      {status === 'responded' && (\n        <ul>\n          {cast.map(({ id, profile_path, original_name, character }) => {\n            return (\n              <li key={id}>\n                <img\n                  src={\n                    profile_path\n                      ? `https://image.tmdb.org/t/p/w200${profile_path}`\n                      : 'https://kartinkin.net/uploads/posts/2022-03/1647018833_14-kartinkin-net-p-anonim-kartinki-20.jpg'\n                  }\n                  alt={original_name}\n                  width={200}\n                />\n                <p>Имя: {original_name}</p>\n                <p>Персонаж: {character}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import { Grid } from 'react-loader-spinner';\n// import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nexport const Loader = () => {\n  return (\n    <>\n      <Grid\n        color=\"#00BFFF\"\n        height={80}\n        width={80}\n        wrapperStyle={{\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n        }}\n      />\n    </>\n  );\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = `2d241d2c03071ceb6548b913b9b2401a`;\n\nexport async function fetchTrendingMovies() {\n  const response = await axios.get(`trending/all/day?api_key=${API_KEY}`);\n  return response.data.results;\n}\n\nexport async function fetchMoviesBySearch(query) {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return response.data.results;\n}\n\nexport async function fetchMovieDetails(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US&external_source=imdb_id`\n  );\n\n  return response.data;\n}\n\nexport async function fetchMovieCredits(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n}\n\nexport async function fetchMovieReviews(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n}\n"],"names":["movieId","useParams","useState","cast","setCast","status","setStatus","useEffect","getMoviesCredits","fetchMovieCredits","map","id","profile_path","original_name","character","src","alt","width","Loader","color","height","wrapperStyle","position","top","left","transform","axios","API_KEY","fetchTrendingMovies","response","data","results","fetchMoviesBySearch","query","fetchMovieDetails","fetchMovieReviews"],"sourceRoot":""}